upstream bbbeasy_app-upstream
{
    server unix:/var/run/php/php8.2-fpm.sock;
}

server
{
    listen 80;
    listen [::]:80;
    server_name bbbeasy.test;
    return 301 https://bbbeasy.test$request_uri;
}

server
{
    charset utf-8;

    # port 443 IPv4,IPv6 with http2 and ssl
    http2 on;
    listen 443 ssl;
    listen [::]:443 ssl ipv6only=on;

    ssl_certificate /etc/letsencrypt/live/HV_HOST/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/HV_HOST/privkey.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    ssl_buffer_size 4k;

    server_name bbbeasy.test;

    root /opt/bbbeasy/bbbeasy-backend/public;
    index index.html;

    access_log /var/log/nginx/bbbeasy-access.log;
    error_log /var/log/nginx/bbbeasy-error.log;

    location /api
    {
        root /opt/bbbeasy/bbbeasy-backend/public;
        # Checks whether the requested url exists as a file ($uri) or directory ($uri/) in the root, else redirect to /index.php.
        try_files $uri $uri/ @redirects;
        # try_files $uri /index.php?$query_string;
    }
    # Redirect mail bounce and ping
    location ~ ^/mailer-ping/(.*$)
    {
        try_files $uri $uri/ @redirects;
    }

    location @redirects
    {
        rewrite ^ /index.php;
    }

    location ~ \.php$
    {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_pass bbbeasy_app-upstream;
        fastcgi_index index.php;
        fastcgi_read_timeout 60;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        access_log /var/log/nginx/bbbeasy-backend-access.log;
        error_log /var/log/nginx/bbbeasy-backend-error.log;
    }

    location /docs
    {
        root /opt/bbbeasy/bbbeasy-docs/build;
        index index.html;
        try_files $uri $uri/ /index.html;

        access_log /var/log/nginx/bbbeasy-docs-access.log;
        error_log /var/log/nginx/bbbeasy-docs-error.log;
    }

    location /
    {
        root /opt/bbbeasy/bbbeasy-frontend/build/installer;
        index index.html;
        try_files $uri /index.html;

        access_log /var/log/nginx/bbbeasy-installer-access.log;
        error_log /var/log/nginx/bbbeasy-installer-error.log;
    }

    # Don't pollute the logs with common requests
    location = /robots.txt
    {
        access_log off; log_not_found off;
    }
    location = /favicon.ico
    {
        access_log off; log_not_found off;
    }

    ##########################
    # Security
    ##########################
    # Hide Nginx version in headers
    server_tokens off;

    # disable cache control
    add_header Cache-Control no-cache;
    expires modified +2d;
    sendfile off;

    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options sameorigin;
    add_header "X-XSS-Protection" "1; mode=block";
    add_header X-Permitted-Cross-Domain-Policies master-only;

    # Deny access to dot-files.
    location ~ /\.
    {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Enable this if you want custom error pages
    # error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #     root html;
    # }

    ##########################
    # Additional Nginx Tweaks
    # Read more: https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
    # Read more: https://www.nginx.com/blog/9-tips-for-improving-wordpress-performance-with-nginx/
    ##########################
    # Buffers
    client_body_buffer_size 10K; # Handles the client buffer size, meaning any POST actions like form submissions.
    client_header_buffer_size 1k; # Handles the client header size. 1K is a decent size.
    client_max_body_size 50M; # The maximum allowed size of a request. If exceeded, Nginx throws a 413 Request Entity Too Large.
    large_client_header_buffers 4 512k; # The max number and size of buffers for large client headers.

    # Timeouts
    client_body_timeout 12; # Time a server will wait for a client body to be sent after request.
    client_header_timeout 12; # Time a server will wait for a client header to be sent after request.
    keepalive_timeout 15; # Timeout for keep-alive connections. After this period of time, the connection is closed.
    send_timeout 10; # If after this time, the client will take nothing, then Nginx shuts down the connection.

    # Gzip compression
    gzip on;
}
